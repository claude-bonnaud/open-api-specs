openapi: 3.0.3
info:
  title: Transaction management
  description: Retrieve a sorted list of transactions, search and filter
    transaction lists, export transactions, and add notes to individual
    transactions.
  version: 2.7.1
  x-icon: local_atm
  x-deprecated: false
  x-api-dashboard-tags:
    - name: Retail
    - name: Business
servers:
  - description: Prism mock server
    url: http://localhost:4010
  - description: Locally running service
    url: http://localhost:18095
tags:
  - name: category-period-totals
  - name: category-totals
  - name: left-to-spend
  - name: transaction-client
  - name: turnovers
paths:
  /client-api/v2/transactions/export:
    summary: Operations for exporting a collection of transactions
    description: Operations for exporting a collection of transactions
    post:
      summary: Export transactions (POST)
      description: Exports transactions in a variety of formats
      operationId: getTransactionsExportWithPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionListRequest'
            example:
              $ref: '#/paths/~1client-api~1v2~1transactions/post/requestBody/content/application~1json/example'
      responses:
        '200':
          description: Exported transactions
          content:
            application/pdf:
              schema:
                type: string
                format: binary
            application/x-ofx:
              schema:
                type: string
            text/csv:
              schema:
                type: string
        '400':
          description: If one or more request parameters don't comply with the specification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              example:
                $ref: '#/paths/~1client-api~1v2~1turnovers/get/responses/400/content/application~1json/example'
        '401':
          description: If the authentication credentials provided are invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
              example:
                $ref: '#/paths/~1client-api~1v2~1turnovers/get/responses/401/content/application~1json/example'
        '403':
          description: If the current user doesn't have authorization to view the
            requested transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
              example:
                $ref: '#/paths/~1client-api~1v2~1turnovers/get/responses/403/content/application~1json/example'
        '404':
          description: If the transactions or arrangements linked to them cannot be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
              example:
                $ref: '#/paths/~1client-api~1v2~1turnovers/get/responses/404/content/application~1json/example'
        '500':
          description: If a runtime error occurs while processing the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                $ref: '#/paths/~1client-api~1v2~1turnovers/get/responses/500/content/application~1json/example'
      tags:
        - transaction-client
  /client-api/v2/transactions/enumValues/{attributeName}:
    parameters:
      - description: Name of the attribute to get
        in: path
        name: attributeName
        required: true
        schema:
          type: string
      - description: Sub-domain of the attribute to get
        in: query
        name: subDomain
        required: false
        schema:
          type: string
  /client-api/v2/transactions/{transactionId}/check-images:
    parameters:
      - description: Internal transaction ID
        in: path
        name: transactionId
        required: true
        schema:
          type: string
  /client-api/v2/turnovers:
    summary: Turnovers
components:
  schemas:
    TransactionListRequest:
      type: object
      additionalProperties: false
      properties:
        amountGreaterThan:
          description: Value that the transaction's amount must be greater than or equal to
          type: number
        amountLessThan:
          description: Value that the transaction's amount must be less than or equal to
          type: number
        bookingDateGreaterThan:
          description: Date that the transaction's booking date must be after or equal to
          type: string
          format: date
        bookingDateLessThan:
          description: Date that the transaction's booking date must be before or equal to
          type: string
          format: date
        types:
          description: List of types that the transaction must have one of
          type: array
          items:
            type: string
        description:
          description: Text that the transaction's description must match
          type: string
        reference:
          description: Text that the transaction's reference must match
          type: string
        typeGroups:
          description: List of type groups that the transaction must have one of
          type: array
          items:
            type: string
        counterPartyName:
          description: Text that the transaction's counterparty name must contain
          type: string
        counterPartyAccountNumber:
          description: Text that the transaction's counterparty account number must match
          type: string
        creditDebitIndicator:
          description: Credit/Debit Indicator that the transaction must be equal to
          $ref: '#/components/schemas/CreditDebitIndicator'
        categories:
          description: List of categories that the transaction must have one of
          type: array
          items:
            type: string
        billingStatus:
          description: Text that the transaction's billing status must match
          type: string
        state:
          description: State the transaction must be in
          $ref: '#/components/schemas/TransactionState'
        currency:
          description: Currency the transaction must match
          type: string
        notes:
          description: Indicates whether only transactions containing notes must be
            retrieved (1 means true)
          type: integer
          format: int32
        id:
          description: Transaction ID that must be retrieved
          type: string
        arrangementId:
          description: Arrangement ID of transactions that must be retrieved
          type: string
        arrangementsIds:
          description: List of Arrangement IDs to which transactions must belong to
          type: array
          items:
            type: string
        fromCheckSerialNumber:
          description: Value that the transaction's check serial number must be greater
            than or equal to
          type: integer
          format: int64
        toCheckSerialNumber:
          description: Value that the transaction's check serial number must be less than
            or equal to
          type: integer
          format: int64
        checkSerialNumbers:
          description: List of check serial numbers that the transaction must have one of
          type: array
          items:
            type: integer
            format: int64
        query:
          description: Search term that one of the fields configured in
            "backbase.transaction.search.fields" must contain
          type: string
        from:
          description: Page number to retrieve transactions (doesn't apply to export
            endpoints)
          type: integer
          format: int32
          default: 0
        cursor:
          description: |
            As an alternative for specifying 'from' this allows pointing to a record to start the retrieval from.
            Not supported out of the box.
          type: string
          default: ''
        size:
          description: |
            Limit the number of elements on the response, defaults to 10 for list requests and a configured value for export ones.
            When used in combination with cursor, the value is allowed to be a negative number to indicate requesting records
            upwards from the starting point indicated by the cursor. (doesn't apply to export endpoints)
          type: integer
          format: int32
          maximum: 500
          minimum: -500
        orderBy:
          description: |
            Field name that retrieved transactions must be ordered by, one of the following:
            * description
            * bookingDate
            * arrangementId
            * reference
            * typeGroup
            * type
            * category
            * valueDate
            * amount
            * currency
            * creditDebitIndicator
            * instructedAmount
            * instructedCurrency
            * currencyExchangeRate
            * counterPartyName
            * counterPartyAccountNumber
            * checkSerialNumber
            * creationTime
          type: string
          default: bookingDate
        direction:
          description: Primary sorting direction for retrieved transactions
          $ref: '#/components/schemas/SortDirection'
          default: DESC
        secDirection:
          description: Secondary sorting direction for retrieved transactions
          $ref: '#/components/schemas/SortDirection'
          default: DESC
        exportType:
          description: |
            Export type, the following ones are supported OOTB (doesn't apply to listing endpoints):
            * CSV
            * OFX
            * PDF
          type: string
          default: CSV
        locale:
          description: Locale for exporting pdf in the user locale
          type: string
          default: en_US
    TransactionState:
      enum:
        - COMPLETED
        - UNCOMPLETED
      type: string
      example: COMPLETED
    TransactionsList:
      type: array
      items:
        $ref: '#/components/schemas/TransactionItem'
    TransactionPatch:
      type: array
      items:
        $ref: '#/components/schemas/TransactionsClientPatchRequestBody'
    GetEnumValues:
      type: array
      items:
        $ref: '#/components/schemas/EnumValuesByAttributeNameGetResponseBody'
    TurnoversGetResponseBody:
      type: object
      additionalProperties: false
      properties:
        arrangementIds:
          description: Reference to the arrangements to which the periodic balances belong
          type: array
          items:
            type: string
        intervalDuration:
          $ref: '#/components/schemas/Duration'
        avgCreditAmount:
          $ref: '#/components/schemas/Currency'
        avgDebitAmount:
          $ref: '#/components/schemas/Currency'
        turnovers:
          type: array
          items:
            $ref: '#/components/schemas/Turnover'
        forecast:
          type: array
          items:
            $ref: '#/components/schemas/Turnover'
        additions:
          description: Additional properties
          type: object
          additionalProperties:
            type: string
      required:
        - turnovers
    CategoryTotalsGetResponseBody:
      type: object
      additionalProperties: false
      properties:
        total:
          $ref: '#/components/schemas/Currency'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
        additions:
          description: Additional properties
          type: object
          additionalProperties:
            type: string
      required:
        - items
    CategoryPeriodTotalsGetResponseBody:
      type: object
      additionalProperties: false
      properties:
        total:
          $ref: '#/components/schemas/Currency'
        intervalDuration:
          $ref: '#/components/schemas/Duration'
        periods:
          type: array
          items:
            $ref: '#/components/schemas/Period'
        additions:
          description: Additional properties
          type: object
          additionalProperties:
            type: string
    LeftToSpendGetResponseBody:
      type: object
      additionalProperties: false
      properties:
        daysLeft:
          description: Number of days left until the end of the month
          format: int32
          type: integer
        incomeToDate:
          $ref: '#/components/schemas/Currency'
        spentToDate:
          $ref: '#/components/schemas/Currency'
        schedulePayments:
          $ref: '#/components/schemas/SchedulePayments'
        leftToSpend:
          $ref: '#/components/schemas/Currency'
        additions:
          description: Additional properties
          type: object
          additionalProperties:
            type: string
    Duration:
      type: string
      description: Intervals duration
      enum:
        - DAY
        - WEEK
        - MONTH
        - YEAR
    Period:
      type: object
      additionalProperties: false
      properties:
        total:
          $ref: '#/components/schemas/Currency'
        intervalStartDate:
          description: Date of starting point for interval
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
        additions:
          description: Additional properties
          type: object
          additionalProperties:
            type: string
    Item:
      type: object
      additionalProperties: false
      properties:
        category:
          description: Transactions category
          type: string
        totalAmount:
          $ref: '#/components/schemas/Currency'
        trend:
          description: Percentage value of the trend
          type: number
        portion:
          description: What percentage of the total amount for a given period is this amount
          type: number
        additions:
          description: Additional properties
          type: object
          additionalProperties:
            type: string
      required:
        - category
        - portion
        - totalAmount
        - trend
    SchedulePayments:
      type: object
      description: The aggregate amount of all schedule payments until the specified date
      additionalProperties: false
      properties:
        paymentItems:
          description: Detail of all schedule payments until the specified date
          type: array
          items:
            $ref: '#/components/schemas/PaymentItem'
        total:
          $ref: '#/components/schemas/Currency'
    TransactionLocation:
      type: object
      additionalProperties: false
      properties:
        id:
          description: Location id
          type: integer
        latitude:
          description: Latitude of the transaction coordinate
          type: number
        longitude:
          description: Longitude of the transaction coordinate
          type: number
        address:
          description: Full address of where the transaction happened
          type: string
      required:
        - id
    TransactionMerchant:
      type: object
      additionalProperties: false
      properties:
        id:
          description: Merchant id
          type: integer
        name:
          description: Merchant name
          type: string
        logo:
          description: The logo url
          type: string
        website:
          description: Merchant web adress
          type: string
      required:
        - id
        - name
    TransactionItem:
      type: object
      additionalProperties: false
      properties:
        id:
          description: Internally used unique identification of the transaction
          maxLength: 50
          type: string
        arrangementId:
          description: Reference to the product to which the transaction belongs
          maxLength: 50
          type: string
        reference:
          description: A tag/label issued by the initiator of the transaction in order to
            be able to refer to the respective transaction
          maxLength: 36
          type: string
        description:
          description: Primary transaction description to show to end-users
          maxLength: 280
          type: string
        originalDescription:
          description: Original description provided by the financial institution if
            transaction enrichment is enabled
          maxLength: 140
          type: string
        typeGroup:
          description: Bank specific code of the group the transaaction type belangs to
            this to be mapped to in integration
          maxLength: 36
          type: string
        type:
          description: Bank specific code to be mapped to generic type in integration
          maxLength: 36
          type: string
        category:
          description: Transaction category
          maxLength: 50
          type: string
        categoryId:
          description: Unique id of the category
          type: integer
        location:
          description: Geographical coordinates of the transaction
          $ref: '#/components/schemas/TransactionLocation'
        merchant:
          description: Merchant information
          $ref: '#/components/schemas/TransactionMerchant'
        bookingDate:
          description: The date the amount is posted to the balance of an account from a
            book keeping perspective.
          type: string
          format: date
        valueDate:
          description: The date on which an amount posted to an account becomes interest
            bearing
          format: date
          type: string
        creditDebitIndicator:
          $ref: '#/components/schemas/CreditDebitIndicator'
        transactionAmountCurrency:
          $ref: '#/components/schemas/Currency'
        instructedAmountCurrency:
          $ref: '#/components/schemas/Currency'
        currencyExchangeRate:
          description: The exchange rate (between both account and transaction currency)
            that was used for the conversion. To be used if those currencies are
            not the same
          type: number
        counterPartyName:
          description: The name of the counterparty
          maxLength: 128
          type: string
        counterPartyAccountNumber:
          description: The International Bank Account Number of the counterparty
          maxLength: 36
          type: string
        counterPartyBIC:
          description: The BIC of the counterparty
          maxLength: 11
          type: string
        counterPartyCity:
          description: City of the counterparty
          maxLength: 35
          type: string
        counterPartyAddress:
          description: Address of the counterparty
          maxLength: 140
          type: string
        counterPartyCountry:
          description: ISO Country code
          maxLength: 2
          minLength: 2
          type: string
        counterPartyBankName:
          description: The bank name of the counterparty
          maxLength: 128
          type: string
        creditorId:
          description: Id of the creditor (Only for SEPA DD)
          maxLength: 19
          type: string
        mandateReference:
          description: Mandate Reference (Only for SEPA DD)
          maxLength: 128
          type: string
        billingStatus:
          maxLength: 8
          type: string
        checkSerialNumber:
          description: Serial number of the check. Each check has a different number for
            identification purposes.
          type: integer
          format: int64
        notes:
          maxLength: 4000
          type: string
        runningBalance:
          description: Indicates the balance of the account at that moment when the
            transaction was executed
          type: number
        additions:
          description: Additional properties
          type: object
          additionalProperties:
            type: string
        checkImageAvailability:
          $ref: '#/components/schemas/CheckImageAvailability'
        creationTime:
          description: Indicates the creation time of the transaction
          type: string
          format: date-time
        disputeStatus:
          description: Indicates the dispute status of a transaction
          $ref: '#/components/schemas/DisputeStatus'
        batchOrderId:
          description: Transaction batch order ID from DBS batches
          maxLength: 50
          type: string
        state:
          description: Indicates the state of the transaction
          $ref: '#/components/schemas/TransactionState'
      required:
        - arrangementId
        - bookingDate
        - creditDebitIndicator
        - description
        - id
        - type
        - typeGroup
        - transactionAmountCurrency
        - state
    TransactionsClientPatchRequestBody:
      type: object
      additionalProperties: false
      properties:
        id:
          description: Unique internal identification for the transaction
          maxLength: 300
          type: string
        arrangementId:
          description: Unique internal identification for the arrangement of the transaction
          maxLength: 50
          type: string
        category:
          description: Transaction category to update. If using this one, do not use
            categoryId
          maxLength: 50
          type: string
        categoryId:
          description: Unique id of the category to update. If using this one, do not use
            category
          type: integer
        billingStatus:
          description: Transaction billing status
          maxLength: 8
          type: string
        notes:
          maxLength: 4000
          type: string
        disputeStatus:
          description: Indicates the dispute status of a transaction
          $ref: '#/components/schemas/DisputeStatus'
        additions:
          description: Additional properties
          type: object
          additionalProperties:
            type: string
        creationTime:
          description: Indicates the creation time of the transaction
          type: string
          format: date-time
      required:
        - arrangementId
        - id
    TransactionCheckImagesResponse:
      type: object
      additionalProperties: false
      properties:
        images:
          description: An array of transaction's check images
          type: array
          items:
            $ref: '#/components/schemas/TransactionCheckImagesItem'
      required:
        - images
    TransactionCheckImagesItem:
      type: object
      additionalProperties: false
      properties:
        side:
          description: Check image side
          $ref: '#/components/schemas/CheckImageSide'
        mimeType:
          description: Image type provided
          $ref: '#/components/schemas/CheckImageType'
        content:
          description: Base64 image representation
          type: string
          format: byte
      required:
        - side
        - mimeType
        - content
    CheckImageAvailability:
      enum:
        - AVAILABLE
        - UNAVAILABLE
      type: string
      example: AVAILABLE
    CheckImageSide:
      enum:
        - FRONT
        - BACK
      type: string
      example: FRONT
    CheckImageType:
      enum:
        - image/png
        - image/jpeg
      type: string
      example: image/png
    Turnover:
      type: object
      additionalProperties: false
      properties:
        intervalStartDate:
          description: Datetime of starting point for interval
          type: string
          format: date-time
        creditAmount:
          $ref: '#/components/schemas/Currency'
        debitAmount:
          $ref: '#/components/schemas/Currency'
        balance:
          $ref: '#/components/schemas/Currency'
        additions:
          description: Additional properties
          type: object
          additionalProperties:
            type: string
      required:
        - balance
        - creditAmount
        - debitAmount
        - intervalStartDate
    PaymentItem:
      type: object
      additionalProperties: false
      properties:
        name:
          description: Name of future schedule payment
          type: string
        total:
          $ref: '#/components/schemas/Currency'
    EnumValuesByAttributeNameGetResponseBody:
      type: object
      additionalProperties: false
      properties:
        value:
          type: string
        additions:
          description: Additional properties
          type: object
          additionalProperties:
            type: string
      required:
        - value
    CreditDebitIndicator:
      type: string
      description: Indicates whether the amount is credited or debited.
      enum:
        - CRDT
        - DBIT
    SortDirection:
      type: string
      description: Sorting direction for retrieved transactions
      enum:
        - ASC
        - DESC
      default: DESC
    DisputeStatus:
      enum:
        - UNDISPUTED
        - PENDING
        - REJECTED
        - REFUNDED
      type: string
      example: UNDISPUTED
    Currency:
      title: Currency
      type: object
      properties:
        amount:
          description: The amount in the specified currency
          type: string
          minimum: -1000000000000000000
          maximum: 1000000000000000000
        currencyCode:
          description: The alpha-3 code (complying with ISO 4217) of the currency that
            qualifies the amount
          type: string
          pattern: ^[A-Z]{3}$
        additions:
          description: Additional properties
          type: object
          additionalProperties:
            type: string
      required:
        - amount
        - currencyCode
    ErrorItem:
      title: ErrorItem
      type: object
      properties:
        message:
          description: Any further information.
          type: string
          minLength: 1
        key:
          description: '{capability-name}.api.{api-key-name}. For generated validation
            errors this is the path in the document the error resolves to. e.g.
            object name + ''.'' + field'
          type: string
          minLength: 1
        context:
          title: Context
          description: Context can be anything used to construct localised messages.
          type: object
          additionalProperties:
            type: string
      required:
        - message
        - key
    BadRequestError:
      title: BadRequestError
      type: object
      required:
        - message
        - key
      properties:
        message:
          type: string
          description: Any further information
          minLength: 1
        key:
          type: string
          description: Error summary
          minLength: 1
        errors:
          type: array
          description: Detailed error information
          items:
            $ref: '#/components/schemas/ErrorItem'
    UnauthorizedError:
      title: UnauthorizedError
      type: object
      required:
        - message
        - key
      properties:
        message:
          type: string
          description: Any further information
          minLength: 1
        key:
          type: string
          description: Error summary
          minLength: 1
        errors:
          type: array
          description: Detailed error information
          items:
            $ref: '#/components/schemas/ErrorItem'
    ForbiddenError:
      title: ForbiddenError
      type: object
      required:
        - message
        - key
      properties:
        message:
          type: string
          description: Any further information
          minLength: 1
        key:
          type: string
          description: Error summary
          minLength: 1
        errors:
          type: array
          description: Detailed error information
          items:
            $ref: '#/components/schemas/ErrorItem'
    InternalServerError:
      title: InternalServerError
      type: object
      description: Represents HTTP 500 Internal Server Error
      properties:
        message:
          type: string
          description: Any further information
          minLength: 1
        key:
          type: string
          description: Error summary
          minLength: 1
    NotFoundError:
      title: NotFoundError
      type: object
      required:
        - message
        - key
      properties:
        message:
          type: string
          description: Any further information
          minLength: 1
        key:
          type: string
          description: Error summary
          minLength: 1
        errors:
          type: array
          description: Detailed error information
          items:
            $ref: '#/components/schemas/ErrorItem'